name: Browser-Extension-Collection (Branch)
run-name: ${{ github.actor }} is Collecting Extensions (Branch) ðŸš€
on:
  push:
    branches-ignore:
      - main
  release:
    types: [edited, released]
  workflow_dispatch:

jobs:
  Date:
    runs-on: ubuntu-24.04
    outputs:
      Date: ${{ steps.date.outputs.date }}
    steps:
      - name: Get current date
        id: DATE
        run: |
          echo "DATE=$(date '+%Y%m%d-%H%M')" >> $GITHUB_OUTPUT
          echo -e "\n$GITHUB_OUTPUT\n"
          cat $GITHUB_OUTPUT

  Code:
    needs: [Date]
    runs-on: ubuntu-24.04
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          submodules: true
          lfs: true

      - name: Setup Git
        run: |
          git config user.name "$(git log -n 1 --pretty=format:%an)"
          git config user.email "$(git log -n 1 --pretty=format:%ae)"

      - name: Bundle Repo1 code base for ${{ vars.COLLECTOR }}
        run: |
          git bundle create --progress ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.bundle --all
          echo -e "\nDirectory Listing\n$(ls -1sht *)"

      - name: Generate Bundle Hash
        run: |
          sha256sum -b ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.bundle | tee \
            ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.bundle.sha

      - name: Upload bundle and hash
        uses: actions/upload-artifact@v4
        with:
          name: ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.bundle
          path: ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.bundle*
          if-no-files-found: error

      - name: TARchive code base for ${{ vars.COLLECTOR }}
        run: |
          tar -cvC .. \
            -f ${{ vars.COLLECTOR }}-code-${{ needs.Date.outputs.Date }}.tgz $(basename ${{ github.WORKSPACE }}) \
            | tee ${{ vars.COLLECTOR }}-code-${{ needs.Date.outputs.Date }}.tgz.txt

      - name: Generate TARchive Hash
        run: |
          sha256sum -b ${{ vars.COLLECTOR }}-code-${{ needs.Date.outputs.Date }}.tgz | tee \
            ${{ vars.COLLECTOR }}-code-${{ needs.Date.outputs.Date }}.tgz.sha

      - name: Directory Listing
        run: echo -e "\nDirectory Listing for $PWD\n$(ls -1Ssh)"

      - name: Upload Tarchive, ToC, and hash
        uses: actions/upload-artifact@v4
        with:
          name: ${{ vars.COLLECTOR }}-code-${{ needs.Date.outputs.Date }}.tgz
          path: ${{ vars.COLLECTOR }}-code-${{ needs.Date.outputs.Date }}.tgz*
          if-no-files-found: error

  Collect-Github:
    needs: [Date]
    runs-on: ubuntu-24.04
    env:
      GH_TOKEN: ${{ github.token }}
  
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Run Collection Script for extensions_github.txt
        run: ./collect.sh extensions_github.txt

      - name: Remove ISO files
        run: |
          if [[ "${{ vars.KEEPISO }}" == "true" ]]; then
            echo -e "\nKeeping ISO files\n"
          else
            echo -e "\nRemoving ISO files\n"
            find . -iname *.iso* -type f -delete
          fi

      - name: Copy README to extensions_github ISO
        run: cp -v README.md extensions_github/

      - name: Install mkisofs
        run: |
          sudo apt-get update -y
          sudo apt-get install -y mkisofs isomd5sum

      - name: ISO Table of contents
        run: |
          tree -a extensions_github \
            | tee extensions_github/extensions_github-${{ needs.Date.outputs.Date }}.iso.txt

      - name: Upload iso ToC artifact
        uses: actions/upload-artifact@v4
        with:
          name: extensions_github-${{ needs.Date.outputs.Date }}.iso.txt
          path: extensions_github/extensions_github-${{ needs.Date.outputs.Date }}.iso.txt
          if-no-files-found: error

      - name: Directory Contents and Disc usage
        run: |
          echo -e "\nListing:\n$(ls -A1h extensions_github/*)"
          echo -e "\nDisk Usage:\n$(du -hd1 extensions_github/*)"

      - name: Make extensions_github ISO
        run: |
          echo "Making ISO of extensions_github"
          mkisofs -J -R -v -T -l \
            -V 'extensions_github-${{ needs.Date.outputs.Date }}' \
            -A 'extensions_github-${{ needs.Date.outputs.Date }}' \
            -o extensions_github-${{ needs.Date.outputs.Date }}.iso \
            extensions_github

      - name: Implant MD5 sum into extensions_github-${{ needs.Date.outputs.Date }}.iso
        run: implantisomd5 extensions_github-${{ needs.Date.outputs.Date }}.iso

      - name: Generate extensions_github-${{ needs.Date.outputs.Date }}.iso Hash
        run: |
          sha256sum -b extensions_github-${{ needs.Date.outputs.Date }}.iso | tee \
            extensions_github-${{ needs.Date.outputs.Date }}.iso.sha

      - name: Show ISO & Hash
        run: ls -Alht *.iso*

      - name: Send extensions_github ISO to Sharepoint
        uses: amentumcms/sharepoint-file-upload-action@main
        with:
          file_path: "*.iso*"
          host_name: "${{ secrets.SHAREPOINT_HOST }}"
          site_name: "${{ secrets.SHAREPOINT_SITE }}"
          upload_path: "${{ secrets.SHAREPOINT_BASEPATH }}/${{ vars.COLLECTOR }}/${{ needs.Date.outputs.Date }}"
          tenant_id: ${{ secrets.SHAREPOINT_TENANT_ID }}
          client_id: ${{ secrets.SHAREPOINT_APP_ID }}
          client_secret: ${{ secrets.SHAREPOINT_APP_SECRET }}
          login_endpoint: "login.microsoftonline.us"
          graph_endpoint: "graph.microsoft.us"

  DownloadCRX:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install requests

      - name: Run download script
        run: python download_extensions.py

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: browser-extensions
          path: extensions/

  MakeISO:
    runs-on: ubuntu-24.04
    needs: [Date, Code, Collect-Github, DownloadCRX]
    env:
      GH_TOKEN: ${{ github.token }}
    permissions:
      contents: write
      pull-requests: read
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Install mkisofs
        run: |
          sudo apt-get update -y
          sudo apt-get install -y mkisofs isomd5sum wget

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: ${{ vars.COLLECTOR }}

      # Download Binaries if needed
      # Binaries Downloaded

      - name: Copy README to ${{ vars.COLLECTOR }} ISO
        run: cp -v README.md ${{ vars.COLLECTOR }}/

      - name: Show Artifacts
        run: ls -Alht ${{ vars.COLLECTOR }}

      - name: Generate Artifact Hash File
        run: |
          cd ${{ vars.COLLECTOR }}
          sha256sum -b *.* | tee \
            ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.sha

      - name: Upload Artifact Hash File
        uses: actions/upload-artifact@v4
        with:
          name: ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.sha
          path: ${{ vars.COLLECTOR }}/${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.sha
          if-no-files-found: error

      - name: ISO Table of contents
        run: |
          tree ${{ vars.COLLECTOR }} \
            | tee ${{ vars.COLLECTOR }}/${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.iso.txt

      - name: Upload ISO ToC artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.iso.txt
          path: ${{ vars.COLLECTOR }}/${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.iso.txt
          if-no-files-found: error

      - name: Make ISO
        run: |
          mkisofs -J -R -v -T -l \
            -V '${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}' \
            -A '${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}' \
            -o ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.iso \
            ${{ vars.COLLECTOR }}

      - name: Implant MD5 sum into iso
        run: implantisomd5 ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.iso

      - name: Generate ISO Hash
        run: |
          sha256sum -b ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.iso \
          | tee ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.iso.sha

      - name: Show ISO & Hash
        run: ls -Alht *.iso*

      - name: Upload ISO, ToC, and hash
        uses: actions/upload-artifact@v4
        with:
          name: ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.iso
          path: ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.iso*
          if-no-files-found: error

  Release:
    runs-on: ubuntu-24.04
    needs: [Date, MakeISO]
    permissions:
      contents: write
      pull-requests: read
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          pattern: "*.txt"

      - name: Show Artifacts
        run: ls -A1h *.txt

      # Create Release